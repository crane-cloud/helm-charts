{{- if .Values.postgresdb.create -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresdb
  labels:
    {{- include "cranecloud.labels" . | nindent 4 }}
spec:
  serviceName: postgresdb
  replicas: {{ .Values.postgresdb.replicas }}
  selector:
    matchLabels:
      app: postgresdb
  template:
    metadata:
      labels:
        app: postgresdb
    spec:
      containers:
        - name: postgresdb
          image: "{{ .Values.postgresdb.image.repository }}:{{ .Values.postgresdb.image.tag }}"
          imagePullPolicy: {{ .Values.postgresdb.image.pullPolicy }}
          ports:
            - containerPort: 5432
              name: postgresdb
          env:
          - name: DATABASE_USER
            value: {{.Values.postgresdb.environment.DATABASE_USER }}
          - name: POSTGRES_DB
            value: {{.Values.postgresdb.environment.DATABASE_NAME }}
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
          volumeMounts:
          - name: postgresdb-data
            mountPath: /var/lib/postgresql/data/pgdata
            
  volumeClaimTemplates:
  - metadata:
      name: postgresdb-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values.postgresdb.storage }}
---
apiVersion: v1
kind: Service
metadata:
  name: postgresdb
  labels:
    {{- include "cranecloud.labels" . | nindent 4 }}
spec:
  clusterIP: None
  selector:
    app: postgresdb
  ports:
    - port: {{ .Values.postgresdb.port }}
      name: postgresdb
      targetPort: postgresdb
{{- end }}
