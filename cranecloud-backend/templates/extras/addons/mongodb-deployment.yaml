apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-mongodb"
  labels:
    app: {{ .Release.Name }}
    component: mongodb
spec:
  replicas: {{ .Values.mongodb.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: mongodb
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        component: mongodb
    spec:
      containers:
        - name: mongodb
          image: "{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}"
          imagePullPolicy: {{ .Values.mongodb.image.pullPolicy }}
          ports:
            - name: mongodb
              containerPort: {{ .Values.mongodb.port }}
          env:
          - name: MONGO_INITDB_ROOT_USERNAME
            value: {{.Values.environment.MONGO_USER }}
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: {{.Values.environment.MONGO_USER_PASSWORD }}
          - name: MONGO_INITDB_DATABASE
            value: {{.Values.environment.MONGO_INITDB_DATABASE }}
          - name: MONGODB_DATA_DIR
            value: /data/db
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
      volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-mongodb-pvc"
            
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-mongodb"
  labels:
    app: {{ .Release.Name }}
    component: mongodb
spec:
  selector:
    app: {{ .Release.Name }}
    component: mongodb
  ports:
    - port: {{ .Values.mongodb.port }}
      targetPort: mongodb

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "{{ .Release.Name }}-mongodb-pvc"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard



