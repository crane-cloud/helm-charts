apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-redis"
  labels:
    app: {{ .Release.Name }}
    component: redis
spec:
  replicas: {{ .Values.redis.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: redis
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        component: redis
    spec:
      containers:
        - name: redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          ports:
            - name: redis
              containerPort: {{ .Values.redis.port }}
          volumeMounts:
            - name: redis-data
              mountPath: /data

      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-redis-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-redis
  labels:
    app: {{ .Release.Name }}
    component: redis
spec:
  selector:
    app: {{ .Release.Name }}
    component: redis
  ports:
    - port: {{ .Values.redis.port }}
      targetPort: redis

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-redis-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 0.5Gi
  storageClassName: standard



