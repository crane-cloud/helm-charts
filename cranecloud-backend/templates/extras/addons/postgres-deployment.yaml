apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgresdb
  labels:
    app: {{ .Release.Name }}
    component: postgresdb
spec:
  replicas: {{ .Values.postgresdb.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: postgresdb
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        component: postgresdb
    spec:
      containers:
        - name: postgresdb
          image: "{{ .Values.postgresdb.image.repository }}:{{ .Values.postgresdb.image.tag }}"
          imagePullPolicy: {{ .Values.postgresdb.image.pullPolicy }}
          ports:
            - name: postgresdb
              containerPort: {{ .Values.postgresdb.port }}
          env:
          - name: DATABASE_USER
            value: {{.Values.environment.DATABASE_USER }}
          - name: POSTGRES_DB
            value: {{.Values.environment.DATABASE_NAME }}
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
          volumeMounts:
          - name: postgresdb-data
            mountPath: /var/lib/postgresql/data

      volumes:
        - name: postgresdb-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-postgresdb-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-postgresdb
  labels:
    app: {{ .Release.Name }}
    component: postgresdb
spec:
  selector:
    app: {{ .Release.Name }}
    component: postgresdb
  ports:
    - port: {{ .Values.postgresdb.port }}
      targetPort: postgresdb

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-postgresdb-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard



